// <auto-generated />
using Libird.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Libird.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201124193702_ThirdMigration")]
    partial class ThirdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Libird.Models.Domain.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("UserId")
                        .HasColumnName("Fk_UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("AccountId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Libird.Models.Domain.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Libird.Models.Domain.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnName("Fk_AuthorId")
                        .HasColumnType("int");

                    b.Property<bool>("Borrowed")
                        .HasColumnType("BIT");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("CHAR(13)");

                    b.Property<string>("NumberEdition")
                        .IsRequired()
                        .HasColumnType("CHAR(3)");

                    b.Property<string>("NumberPage")
                        .IsRequired()
                        .HasColumnType("CHAR(4)");

                    b.Property<bool>("Read")
                        .HasColumnType("BIT");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Libird.Models.Domain.BookAccount", b =>
                {
                    b.Property<int>("BookAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnName("Fk_AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnName("Fk_BookId")
                        .HasColumnType("int");

                    b.HasKey("BookAccountId");

                    b.HasIndex("AccountId");

                    b.HasIndex("BookId");

                    b.ToTable("Book_Account");
                });

            modelBuilder.Entity("Libird.Models.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Libird.Models.Domain.Account", b =>
                {
                    b.HasOne("Libird.Models.Domain.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("Libird.Models.Domain.Account", "UserId")
                        .HasConstraintName("Fk_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Libird.Models.Domain.Book", b =>
                {
                    b.HasOne("Libird.Models.Domain.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK_AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Libird.Models.Domain.BookAccount", b =>
                {
                    b.HasOne("Libird.Models.Domain.Account", "Account")
                        .WithMany("BookAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("Fk_AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Libird.Models.Domain.Book", "Book")
                        .WithMany("BookAccounts")
                        .HasForeignKey("BookId")
                        .HasConstraintName("Fk_BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
